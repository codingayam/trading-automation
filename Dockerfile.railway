# Railway All-in-One Dockerfile for Trading Automation System
FROM python:3.9-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV ENVIRONMENT=production

# Create app user (handle existing group gracefully)
RUN groupadd --system tradingapp 2>/dev/null || true
RUN useradd --system --gid tradingapp --home-dir /app --create-home tradingapp 2>/dev/null || true

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    curl \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements-dev.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --force-reinstall "numpy>=1.21.0,<1.25.0" && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /var/log/supervisor && \
    chown -R tradingapp:tradingapp /app

# Copy supervisor configuration
COPY deployment/railway/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Switch to app user
USER tradingapp

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/api/health || exit 1

# Expose port (Railway will set this)
EXPOSE $PORT

# Command to run debug script first to diagnose issues
CMD ["python3", "railway_debug.py"]