version: '3.8'

services:
  trading-automation:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: trading-automation
    ports:
      - "5000:5000"    # Dashboard
      - "8080:8080"    # Health checks
    volumes:
      # Mount data directory for persistence
      - ./data:/app/data
      - ./logs:/app/logs
      # Mount config for easy updates
      - ./config:/app/config
      # Mount .env file
      - ./.env:/app/.env
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Add database service for PostgreSQL in production
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: trading-db
  #   environment:
  #     POSTGRES_DB: trading_automation
  #     POSTGRES_USER: trading_user
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # Optional: Add Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: trading-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

volumes:
  # Uncomment if using PostgreSQL
  # postgres_data:
  # redis_data:
  trading_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data